/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package manager;

import java.time.LocalDate;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import managefile.Data;
import managefile.Manager;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartMouseEvent;
import org.jfree.chart.ChartMouseListener;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Asus
 */
public class ManagerHome extends javax.swing.JPanel {

    private final String managerId;
    Manager manager = new Manager();
    Data data = new Data();
    managerAccountManager backend = new managerAccountManager();

    /**
     * Creates new form ManagerHomr
     */
    public ManagerHome(String managerId) {
        setLayout(null); 
        this.managerId = managerId;
        String managerName;
        initComponents();
        contentPanel.setSize(1000, 300);
        contentPanel.setOpaque(false);
        
        //Create dataset
        Map<String, Double> yearlyTotalRevenue = backend.getYearlyRevenue();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for(Map.Entry<String, Double> entry : yearlyTotalRevenue.entrySet()){
            dataset.addValue(entry.getValue(), "Revenue", entry.getKey());
        }
        // Create chart
        JFreeChart barChart = ChartFactory.createBarChart(
                "Revenue Chart",   // Chart title
                "Year",            // X-axis Label
                "Amount ($)",      // Y-axis Label
                dataset
        );

        // Display the chart in the JPanel
        ChartPanel chartPanel = new ChartPanel(barChart);
        chartPanel.setPreferredSize(new java.awt.Dimension(800, 400));
        
        chartPanel.addChartMouseListener(new ChartMouseListener(){
            @Override
            public void chartMouseClicked(ChartMouseEvent e){
                if(e.getEntity() != null){
                    String clickedYear = e.getEntity().getToolTipText();
                    String year = clickedYear.substring(clickedYear.indexOf(",") + 2, clickedYear.indexOf(")"));
                    showDailySalesChart(year);
                }
            }

            @Override
            public void chartMouseMoved(ChartMouseEvent cme) {
                //chill
            }
        });
        contentPanel.setLayout(new java.awt.BorderLayout());
        contentPanel.add(chartPanel, java.awt.BorderLayout.CENTER);
        contentPanel.validate();
    }
    
    private void showDailySalesChart(String year){
        System.out.println(year);
        Map<LocalDate, Double> dailySales = backend.getDailySalesForYear(year);
        System.out.println(dailySales);
        DefaultCategoryDataset dailyDataset = new DefaultCategoryDataset();
        for (Map.Entry<LocalDate, Double> entry : dailySales.entrySet()) {
            dailyDataset.addValue(entry.getValue(), "Daily Sales", entry.getKey());
        }

        // Create a new bar chart for daily sales
        JFreeChart dailyChart = ChartFactory.createBarChart(
                "Daily Sales for " + year,   // Chart title
                "Date",                      // X-axis Label
                "Amount ($)",                // Y-axis Label
                dailyDataset,                // Dataset
                PlotOrientation.VERTICAL,
                true,                        // Include legend
                true,                        // Tooltips
                false                        // URLs
        );
        
        SwingUtilities.invokeLater(() -> {
            JFrame dailySalesFrame = new JFrame("Daily Sales - " + year);
            dailySalesFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            dailySalesFrame.add(new ChartPanel(dailyChart));
            dailySalesFrame.pack();
            dailySalesFrame.setVisible(true);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPanel = new javax.swing.JPanel();

        setLayout(new java.awt.GridLayout());

        contentPanel.setPreferredSize(new java.awt.Dimension(1000, 300));

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 649, Short.MAX_VALUE)
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        add(contentPanel);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPanel;
    // End of variables declaration//GEN-END:variables
}
