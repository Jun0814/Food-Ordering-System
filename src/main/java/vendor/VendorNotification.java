/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vendor;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.image.BufferedImage;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import managefile.Data;
import managefile.Vendor;
import method.ImageHandler;

/**
 *
 * @author TPY
 */
public class VendorNotification extends javax.swing.JPanel {

    Data data = new Data();
    Vendor vendor = new Vendor();
    ImageHandler imageHandler = new ImageHandler();
    private String[][] notificationsData;
    private String userId;
    
    /**
     * Creates new form VendorNotification
     */
    
    public VendorNotification(String userId) {
        initComponents();
        this.userId = userId;
        notificationsData = data.retrieveDataAsArray(3, userId, "src\\main\\java\\repository\\notifications.txt");
        intiMenuPanel();
        setJScrollPane();
    }
    
    private void setMenuPanelHeight(){
        int orderBlockCount = 0;
        int row;
        int menuPanelHeight = 750;
        
        for (int i = 0; i < menuPanel.getComponentCount(); i++) {
            if (menuPanel.getComponent(i) instanceof JPanel) {
                orderBlockCount++;
            }
        }
        
        row = (int) orderBlockCount;     
        if(row >= 3){
            menuPanelHeight = 750 + ((row-3)*(200));
        }else{
            menuPanelHeight = 750;
        }
        menuPanel.setPreferredSize(new Dimension(1000,menuPanelHeight));
    }
    
    private void setJScrollPane(){
        menuPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
        JScrollPane scrollPane = new JScrollPane(menuPanel);
        scrollPane.setPreferredSize(new Dimension(1000,740));
        scrollPane.setBorder(BorderFactory.createEmptyBorder());
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
        scrollPane.getVerticalScrollBar().setUnitIncrement(10);
        this.add(scrollPane);
    }
    
    private void intiMenuPanel(){        
        for (String[] notificationsDatas : notificationsData) {
            try {
                String vendorId = notificationsDatas.length > 3 ? notificationsDatas[3].trim() : "";
                if (vendorId.equalsIgnoreCase(userId)) {
                    
                    String nofityId = notificationsDatas.length > 0 ? notificationsDatas[0].trim() : "";
                    String content = notificationsDatas.length > 1 ? notificationsDatas[1].trim() : "";
                    String notifyDate = notificationsDatas.length > 2 ? notificationsDatas[2].trim() : "";
                    
                    NotifyBlock notifyBlock = new NotifyBlock();
                    notifyBlock.setNotifyId(nofityId);
                    notifyBlock.setComment(content);
                    String [] dateNotify = notifyDate.split("T", 2);
                    notifyBlock.setDate(dateNotify[0]);
                    notifyBlock.setEdgeColor(new Color(200,200,255));
                    notifyBlock.setBackgroundColor(new Color(255,255,255));
                    
                    String imagePath = data.retrieveData(userId, 7, vendor.getFilepath());
                    
                    BufferedImage loadedImage = imageHandler.loadImage(imagePath);
                    JLabel label = notifyBlock.getLabel();
                    label.setBounds(0, 0, 200, 200);
                    imageHandler.displayImageOnLabel(loadedImage, label);
                    
                    menuPanel.add(notifyBlock);
                    notifyBlock.repaint();
                    notifyBlock.revalidate();
                }
            } catch(Exception e) {
                e.printStackTrace();
            }
        }
        setMenuPanelHeight();
        menuPanel.repaint();
        menuPanel.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        menuPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(200, 200, 255));
        setMinimumSize(new java.awt.Dimension(1000, 800));

        jLabel1.setBackground(new java.awt.Color(39, 40, 56));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(140, 75, 242));
        jLabel1.setText("Notification");
        add(jLabel1);

        menuPanel.setBackground(new java.awt.Color(200, 200, 255));
        menuPanel.setAutoscrolls(true);
        menuPanel.setMinimumSize(new java.awt.Dimension(1000, 750));

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );

        add(menuPanel);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel menuPanel;
    // End of variables declaration//GEN-END:variables
}
